{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { createRoot } from 'react-dom/client'\nimport { createElement } from 'react'\nimport type { ComponentType } from 'react'\n\n/**\n * Configuration options for auto-mounting\n */\nexport interface AutoMountOptions {\n  /** The app prefix used in data attributes (e.g., 'meow', 'cats') */\n  appPrefix: string\n  /** The React component to mount */\n  component: ComponentType<any>\n  /** Optional CSS to import when mounting */\n  cssImport?: () => void\n}\n\n/**\n * Creates an auto-mount function for a React SPA\n * \n * @param options Configuration options for auto-mounting\n * @returns A function that will auto-mount the component when called\n * \n * @example\n * ```typescript\n * import { createAutoMountFunction } from '@rei-init/spa-auto-mount'\n * import App from './App'\n * import './index.css'\n * \n * const autoMount = createAutoMountFunction({\n *   appPrefix: 'meow',\n *   component: App,\n *   cssImport: () => import('./index.css')\n * })\n * \n * // Auto-mount on script load\n * autoMount()\n * \n * // Also mount on DOM ready if script loads before DOM\n * if (document.readyState === 'loading') {\n *   document.addEventListener('DOMContentLoaded', autoMount)\n * }\n * ```\n */\nexport function createAutoMountFunction(options: AutoMountOptions) {\n  const { appPrefix, component: AppComponent, cssImport } = options\n\n  return function autoMount() {\n    // Look for containers with data-app-{appPrefix} attribute that haven't been mounted yet\n    const selector = `[data-app-${appPrefix}]:not([data-app-${appPrefix}-mounted])`\n    \n    // Find the first container that matches\n    const container = document.querySelector(selector)\n    \n    if (!container || !(container instanceof HTMLElement)) {\n      return // No suitable container found\n    }\n    \n    // Mark as mounted to prevent double-mounting\n    container.setAttribute(`data-app-${appPrefix}-mounted`, 'true')\n\n    // Extract props from data attributes\n    const props: Record<string, unknown> = {}\n\n    // Convert data-{appPrefix}-* attributes to props\n    Object.keys(container.dataset).forEach(key => {\n      if (key.startsWith(appPrefix)) {\n        const propKey = key.replace(new RegExp(`^${appPrefix}`), '').replace(/([A-Z])/g, (_, letter) =>\n          letter.toLowerCase()\n        )\n        let value: unknown = container.dataset[key]\n\n        // Parse special values\n        if (value === 'true') value = true\n        else if (value === 'false') value = false\n        else if (value && !isNaN(Number(value))) value = Number(value)\n\n        if (propKey) props[propKey] = value\n      }\n    })\n\n    // Import CSS if provided\n    if (cssImport) {\n      cssImport()\n    }\n\n    // Clear loading content and mount React app\n    container.innerHTML = ''\n    const root = createRoot(container)\n    root.render(createElement(AppComponent, props))\n  }\n}\n\n/**\n * Utility function to run auto-mount immediately and on DOM ready\n * \n * @param autoMountFn The auto-mount function to run\n * \n * @example\n * ```typescript\n * const autoMount = createAutoMountFunction({ appPrefix: 'meow', component: App })\n * runAutoMount(autoMount)\n * ```\n */\nexport function runAutoMount(autoMountFn: () => void) {\n  // Run immediately\n  autoMountFn()\n  \n  // Also run on DOM ready if script loads before DOM\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', autoMountFn)\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAC3B,mBAA8B;AA0CvB,SAAS,wBAAwB,SAA2B;AACjE,QAAM,EAAE,WAAW,WAAW,cAAc,UAAU,IAAI;AAE1D,SAAO,SAAS,YAAY;AAE1B,UAAM,WAAW,aAAa,SAAS,mBAAmB,SAAS;AAGnE,UAAM,YAAY,SAAS,cAAc,QAAQ;AAEjD,QAAI,CAAC,aAAa,EAAE,qBAAqB,cAAc;AACrD;AAAA,IACF;AAGA,cAAU,aAAa,YAAY,SAAS,YAAY,MAAM;AAG9D,UAAM,QAAiC,CAAC;AAGxC,WAAO,KAAK,UAAU,OAAO,EAAE,QAAQ,SAAO;AAC5C,UAAI,IAAI,WAAW,SAAS,GAAG;AAC7B,cAAM,UAAU,IAAI,QAAQ,IAAI,OAAO,IAAI,SAAS,EAAE,GAAG,EAAE,EAAE;AAAA,UAAQ;AAAA,UAAY,CAAC,GAAG,WACnF,OAAO,YAAY;AAAA,QACrB;AACA,YAAI,QAAiB,UAAU,QAAQ,GAAG;AAG1C,YAAI,UAAU,OAAQ,SAAQ;AAAA,iBACrB,UAAU,QAAS,SAAQ;AAAA,iBAC3B,SAAS,CAAC,MAAM,OAAO,KAAK,CAAC,EAAG,SAAQ,OAAO,KAAK;AAE7D,YAAI,QAAS,OAAM,OAAO,IAAI;AAAA,MAChC;AAAA,IACF,CAAC;AAGD,QAAI,WAAW;AACb,gBAAU;AAAA,IACZ;AAGA,cAAU,YAAY;AACtB,UAAM,WAAO,0BAAW,SAAS;AACjC,SAAK,WAAO,4BAAc,cAAc,KAAK,CAAC;AAAA,EAChD;AACF;AAaO,SAAS,aAAa,aAAyB;AAEpD,cAAY;AAGZ,MAAI,SAAS,eAAe,WAAW;AACrC,aAAS,iBAAiB,oBAAoB,WAAW;AAAA,EAC3D;AACF;","names":[]}